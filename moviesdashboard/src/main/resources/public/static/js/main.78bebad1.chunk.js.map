{"version":3,"sources":["pages/HomePage.js","pages/YearPage.js","pages/MoviesPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","useState","genres","setGenres","useEffect","a","fetch","response","json","data","fetchGenres","className","map","genre","to","YearPage","years","setYears","useParams","fetchYears","year","MoviesPage","movies","setMovies","movie","title","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAGiBA,EAAW,WAEhB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,qBACI,YAEqB,uCAAG,8BAAAC,EAAA,sEAEOC,MAAM,gCAFb,cAEVC,EAFU,gBAGIA,EAASC,OAHb,OAGVC,EAHU,OAIhBN,EAAUM,GAJM,2CAAH,qDAMrBC,KACE,IAOF,sBAAKC,UAAU,WAAf,UAEA,qBAAKA,UAAU,WAAf,SACA,mDAGA,qBAAKA,UAAU,SAAf,SAEIT,EAAOU,KAAK,SAAAC,GAAK,OACjB,cAAC,IAAD,CAAMC,GAAE,WAAOD,GAAf,SAEA,sBAAKF,UAAU,QAAf,cAAyBE,EAAzB,kBC9BPE,G,MAAW,WACtB,MAA0Bd,mBAAS,IAAnC,mBAAOe,EAAP,KAAcC,EAAd,KACQJ,EAAUK,cAAVL,MAUR,OATAT,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,gCAAD,OAAiCO,IAD5C,cACXN,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBQ,EAASR,GAHQ,2CAAH,qDAKhBU,KACC,IAID,sBAAKR,UAAU,WAAf,UAEE,qBAAKA,UAAU,WAAf,SACE,mCAAME,EAAN,qBAGF,qBAAKF,UAAU,QAAf,SACGK,EAAMJ,KAAI,SAACQ,GAAD,OACT,cAAC,IAAD,CAAMN,GAAE,WAAMD,EAAN,YAAeO,GAAvB,SACE,qBAAKT,UAAU,OAAf,SAAuBS,gBCtBtBC,G,YAAa,WACxB,MAA4BpB,mBAAS,IAArC,mBAAOqB,EAAP,KAAeC,EAAf,KACA,EAAwBL,cAAhBL,EAAR,EAAQA,MAAOO,EAAf,EAAeA,KAYf,OAXAhB,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,gCAAD,OACMO,EADN,YACeO,IAF1B,cACXb,EADW,gBAIEA,EAASC,OAJX,OAIXC,EAJW,OAKjBc,EAAUd,GALO,2CAAH,qDAOhBU,KACC,IAID,sBAAKR,UAAU,aAAf,UAEE,qBAAKA,UAAU,WAAf,SACE,mCAAME,EAAN,OAAgBO,OAGlB,qBAAKT,UAAU,SAAf,SACGW,EAAOV,KAAI,SAACY,GAAD,OAEZ,qBAAKb,UAAU,QAAf,SACOa,EAAMC,kB,MCONC,MA/Bf,WACE,OACE,sBAAKf,UAAU,MAAf,UAEE,qBAAKA,UAAU,QAAf,SACE,sDAGF,8BACE,cAAC,IAAD,UACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOgB,KAAK,gBAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,iBCjBCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78bebad1.chunk.js","sourcesContent":["    import {React, useEffect, useState} from 'react';\r\n    import {Link} from 'react-router-dom';\r\n    import './HomePage.scss';\r\n    export const HomePage = () =>\r\n        {\r\n            const [genres, setGenres] = useState([]);\r\n\r\n            useEffect(\r\n                ()=>\r\n                {\r\n                    const fetchGenres = async() =>\r\n                    {\r\n                        const response = await fetch(\"http://localhost:8080/genres\");\r\n                        const data  = await response.json();\r\n                        setGenres(data);\r\n                    };\r\n                fetchGenres();\r\n                },[]\r\n            );\r\n\r\n\r\n\r\n\r\n            return (\r\n                <div className=\"HomePage\">\r\n\r\n                <div className=\"Subtitle\">\r\n                <h4>Pick your genre</h4>\r\n                </div>\r\n\r\n                <div className=\"genres\">\r\n                {\r\n                    genres.map( genre => \r\n                    <Link to ={`/${genre}`}>\r\n                        \r\n                    <div className=\"genre\"> {genre} </div> \r\n                    </Link>     \r\n                    )\r\n                }\r\n                </div>\r\n                </div>\r\n            );\r\n    };","import { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./YearPage.scss\";\r\n\r\nexport const YearPage = () => {\r\n  const [years, setYears] = useState([]);\r\n  const { genre } = useParams();\r\n  useEffect(() => {\r\n    const fetchYears = async () => {\r\n      const response = await fetch(`http://localhost:8080/genres/${genre}`);\r\n      const data = await response.json();\r\n      setYears(data);\r\n    };\r\n    fetchYears();\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <div className=\"YearPage\">\r\n      \r\n      <div className=\"Subtitle\">\r\n        <h4> {genre} \\ Pick Year</h4>\r\n      </div>\r\n      \r\n      <div className=\"years\">\r\n        {years.map((year) => (\r\n          <Link to={`/${genre}/${year}`}>\r\n            <div className=\"year\">{year}</div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    \r\n    </div>\r\n  );\r\n};\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './MoviePage.scss';\r\n\r\n\r\nexport const MoviesPage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const { genre, year } = useParams();\r\n  useEffect(() => {\r\n    const fetchYears = async () => {\r\n      const response = await fetch(\r\n        `http://localhost:8080/genres/${genre}/${year}`\r\n      );\r\n      const data = await response.json();\r\n      setMovies(data);\r\n    };\r\n    fetchYears();\r\n  }, []);\r\n\r\n  return (\r\n    \r\n    <div className=\"MoviesPage\">\r\n    \r\n      <div className=\"Subtitle\">\r\n        <h4> {genre} \\ {year}</h4>\r\n      </div>\r\n    \r\n      <div className=\"movies\">\r\n        {movies.map((movie) => (\r\n        \r\n        <div className=\"movie\">\r\n              {movie.title}\r\n        </div>\r\n\r\n\r\n\r\n        ))}\r\n      </div>\r\n    \r\n    </div>\r\n\r\n    \r\n  );\r\n};\r\n","import { React } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { HomePage } from \"./pages/HomePage.js\";\nimport { YearPage } from \"./pages/YearPage.js\";\nimport { MoviesPage } from \"./pages/MoviesPage.js\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <div className=\"Title\">\n        <h1>Cinephile - Corner</h1>\n      </div>\n\n      <div>\n        <Router>\n          <Switch>\n            \n            <Route path=\"/:genre/:year\">\n              <MoviesPage />\n            </Route>\n\n            <Route path=\"/:genre\">\n              <YearPage />\n            </Route>\n\n            <Route path=\"/\">\n              <HomePage />\n            </Route>\n          \n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}